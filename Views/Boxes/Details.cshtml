@using Web_Programming_Project.Data.Enum;
@model Web_Programming_Project.Models.Box

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Box</h4>
    <hr />
    <div class="row">
        <div class="col-7">
            <dl class="row">
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.BoxName)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.BoxName)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.BoxTheme)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.BoxTheme.ThemeName)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.BoxAgeCategory)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.BoxAgeCategory)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.BoxImgName)
                </dt>
                <dd class="col-sm-10">
                    <img src="@("~/uploads/images/Boxes/"+Model.BoxImgName)" asp-append-version="true" width="150px" height="100px" />
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.BoxDescription)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.BoxDescription)
                </dd>
            </dl>
        </div>
        <div class="col-1"></div>
        <div class="col-4">
            <div class="card list-bricks-overflow overflow-hidden">
                <div class="card-header">
                    <h5 class="float-start">List of bricks</h5>
                    <div class="badge rounded-pill bg-primary float-end">
                        <span>@string.Format("{0:0.00}",ViewData["totalPrice"]) €</span>
                    </div>
                    <input class="visually-hidden" name="boxPrice" type="number" value="0">
                </div>
                <div class="card-body overflow-auto p-3">
                    <ul class="list-group">
                        @if (Model.BoxBricksInBox.Count == 0)
                        {
                            <li class="list-group-item">No bricks</li>
                        }
                        else
                        {
                            @foreach (BrickInBox pack in Model.BoxBricksInBox)
                            {
                                <li class="list-group-item"data-bs-toggle="tooltip" data-bs-html="true" title="<b>@(pack.BrickInBoxBrick.BrickName)</b><br/><em>@(pack.BrickInBoxBrick.BrickSize.GetDisplayName())</em><br/><em>@string.Format("{0:0.00}", pack.BrickInBoxBrick.BrickPrice) EUR / Brick</em>" ><i style='color:rgba(@(pack.BrickInBoxBrick.BrickColorObj.BrickColorRed),@(pack.BrickInBoxBrick.BrickColorObj.BrickColorGreen),@(pack.BrickInBoxBrick.BrickColorObj.BrickColorBlue),@(pack.BrickInBoxBrick.BrickColorObj.BrickColorAlpha))' class='fa-solid fa-stop me-2'></i> @(pack.BrickInBoxBrick.BrickName) <span class="badge rounded-pill bg-primary float-end">@(pack.BrickInBoxQuantity)</span></li>
                            }
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>
<div>
    @if (User.Identity.IsAuthenticated)
    {
        <a class="badge bg-info text-light" asp-action="Edit" asp-route-id="@Model?.Id">Edit</a>
    }
    <a class="badge bg-info text-light" asp-action="Index">Back to List</a>
</div>
