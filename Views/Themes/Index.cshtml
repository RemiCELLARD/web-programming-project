@using Web_Programming_Project.Data.Enum;
@model IEnumerable<Web_Programming_Project.Models.Theme>

@{
    ViewData["Title"] = "Themes";
}

<h1>Themes</h1>
<form method="get" asp-action="Index">
    <div class="input-group mb-3">
        @if (User.Identity.IsAuthenticated)
        {
            <a asp-action="Create" class="btn btn-success rounded-end me-4"><i class="fa-solid fa-plus"></i> Create theme</a>
        }
        <input type="text" name="themeSearch" value="@ViewData["themeSearch"]" class="form-control rounded-start" placeholder="Theme name" aria-label="Theme name" aria-describedby="button-submit-search">
        @if (ViewData["themeAgeRange"] is null)
        {
            <select class="form-select" name="themeAgeRange" id="inputGroupSelect01" asp-items="Html.GetEnumSelectList<AgeCategoryEnum>().ToList()">
                <option value="-1" selected>Age range</option>
            </select>
        }
        else
        {
            <select class="form-select" name="themeAgeRange" id="inputGroupSelect01">
                @if ("-1".Equals(ViewData["themeAgeRange"]))
                {
                    <option value="-1" selected>Age range</option>
                }
                else
                {
                    <option value="-1">Age range</option>
                }
                @foreach (SelectListItem item in Html.GetEnumSelectList<AgeCategoryEnum>())
                {
                    @if (item.Value.Equals(ViewData["themeAgeRange"]))
                    {
                        <option value="@(item.Value)" selected>@(item.Text)</option>
                    }
                    else
                    {
                        <option value="@(item.Value)">@(item.Text)</option>
                    }
                }
            </select>
        }
        <button class="btn btn-outline-secondary rounded-end" type="submit" id="button-submit-search">Search</button>
        <a href="/Themes?themeSearch=@ViewData["themeSearch"]&themeAgeRange=@ViewData["themeAgeRange"]&prevThemeSort=@ViewData["prevThemeSort"]" class="btn btn-primary rounded ms-4"><i class="fa-solid fa-sort-alpha-@ViewData["prevThemeSort"]"></i></a>
    </div>
</form>
<div id="list-theme">
    @if (Model.Count() == 0)
    {
        <div class="alert alert-danger" role="alert">
            <h4 class="alert-heading">Ooopppss !</h4>
            <p>No theme found in database</p>
        </div>
    }
    else
    {
        @foreach (var item in Model)
        {
            <div class="card mt-3" >
                <div class="row g-0">
                    <div class="d-flex align-items-center ps-3 pt-3 pb-3">
                        <div class="flex-shrink-0 media-img-lego">
                            <img src="@("~/uploads/images/Themes/"+item.ThemeImgName)" asp-append-version="true" class="img-fluid rounded" alt="...">
                        </div>
                        <div class="flex-grow-1 ms-3">
                            <h5 class="card-title">@Html.DisplayFor(modelItem => item.ThemeName)</h5>
                            <p class="card-text">@Html.DisplayFor(modelItem => item.ThemeDescription)</p>
                            <p class="card-text">
                                <a href="/Boxes?theme_id=${e[0]}" class="btn btn-primary">View associated boxes</a>
                                @if (User.Identity.IsAuthenticated){
                                    <a asp-action="Edit" class="btn btn-warning" asp-route-id="@item.Id"><i class="fa-solid fa-pen-to-square"></i></a>
                                    <a class="btn btn-danger" onclick="openModalDeleteTheme(@item.Id)"><i class="fa-solid fa-trash"></i></a>
                                }
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
</div>

<!-- Delete Popup -->
<!-- Modal -->
<div class="modal fade" id="modalDeleteTheme" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="modalDeleteThemeLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalDeleteThemeLabel">Delete a theme</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure to delete this theme ?
            </div>
            <div class="modal-footer">
                <form asp-action="Delete">
                    <input type="hidden" name="Id" id="themeToDelete" value="-1" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <input type="submit" value="Delete" class="btn btn-danger" />
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    function openModalDeleteTheme(themeId) {
        var modalDeleteThemeObj = new bootstrap.Modal(document.getElementById('modalDeleteTheme'), {});
        $("#themeToDelete").val(themeId);
        modalDeleteThemeObj.show();
    }
</script>